Abtf[0](function(d,b){if(b.offline=function(){return{then:function(){}}},"serviceWorker"in d.navigator&&b[8]&&b[8][0]){var c=d.document,e=b[8];if(e[3]){var f,g=function(){b[15](function(){if(f!==navigator.onLine&&c.body){if(navigator.onLine){if(void 0===f)return;console.info("Abtf.offline() \u27a4 connection restored");c.body.classList.remove("offline")}else console.warn("Abtf.offline() \u27a4 connection offline"),c.body.classList.add("offline");f=!!navigator.onLine}})};d.addEventListener("online",
g);d.addEventListener("offline",g);g()}var h=function(){navigator.serviceWorker.controller.postMessage([1,b[8][2],b[8][4],b[8][5]])};navigator.serviceWorker.ready.then(function(){navigator.serviceWorker.controller?h():navigator.serviceWorker.addEventListener("controllerchange",function(){h()});console.info("Abtf.pwa() \u27a4 service worker ready")});e[6]&&navigator.serviceWorker.register(e[0],{scope:e[1]}).then(function(a){return new Promise(function(b,c){a.installing?a.installing.addEventListener("statechange",
function(a){"installed"==a.target.state?(console.info("Abtf.pwa() \u27a4 service worker loaded"),b()):(console.warn("Abtf.pwa() \u27a4 service worker",a.target.state),"redundant"==a.target.state&&c())}):(console.info("Abtf.pwa() \u27a4 service worker loaded"),b())})})["catch"](function(a){throw a;});navigator.serviceWorker.addEventListener("message",function(a){a&&a.data&&a.data instanceof Array&&2===a.data[0]&&c.body&&(a=new CustomEvent("sw-update",{detail:{url:a.data[1]}}),c.body.dispatchEvent(a))});
var k=function(a,b){if(navigator.serviceWorker.controller){var c=new MessageChannel;c.port1.onmessage=function(a){a.data&&a.data.error?console.info("Abtf.offline() \u27a4 error",a.data.error):b(a.data.status)};navigator.serviceWorker.controller.postMessage([2,a],[c.port2])}else navigator.serviceWorker.ready.then(function(){k(a,b)})};b.offline=function(a){return(new Promise(function(b){k(a,b)}))["catch"](function(b){console.info("Abtf.offline() \u27a4 error",b,a)})}}});
